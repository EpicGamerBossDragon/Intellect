
#ifndef EVAL_HPP
#define EVAL_HPP
constexpr int PIECE_VALUES[6] = {100, 300, 300, 500, 900, 20000};
//phase
constexpr int PHASE_VALUES[6] = {0, 1, 1, 2, 5, 0};
constexpr int MAX_PHASE = 26;

//mobility
constexpr int MG_MOBILITY[6] = {0, 4, 4, 3, 1, 0, };
constexpr int EG_MOBILITY[6] = {0, 2, 2, 3, 6, 0, };


constexpr int MAX_PIECE_BITS[6] = {4, 8, 13, 14, 27, 8};

//pawn structure values
constexpr int PASSED_VALUE[8] = {0, 30, 25, 20, 15, 13, 10, 0}; //From white point of view
constexpr int EG_PASSED_BONUS = 20;
constexpr int MG_DOUBLED_VALUE = 2;
constexpr int EG_DOUBLED_VALUE = 8;
constexpr int MG_ISOLATED_VALUE = 13;
constexpr int EG_ISOLATED_VALUE = 10;

//piece values
constexpr int MG_PIECE_VALUES[6] = {96, 312, 330, 530, 999, 0, };
constexpr int EG_PIECE_VALUES[6] = {105, 308, 335, 540, 992, 0, };

//king safety
constexpr int KING_ATTACKS[6] = {0, 4, 4, 4, 6, 0};
constexpr int SEMIOPEN_KING_FILE_VALUE = 10;

//additional terms
constexpr int MG_BISHOP_PAIR = 9;
constexpr int EG_BISHOP_PAIR = 39;

//PST tables
constexpr int MG_PST_VALUES[6][64] =
{
{
0, 0, 0, 0, 0, 0, 0, 0,
-2, 38, -23, 37, 25, 31, -38, -62,
-61, -30, -26, -26, -20, 61, -32, -65,
-32, -14, -21, -15, -8, -36, -22, -40,
-45, -19, -20, -10, -4, -14, -33, -57,
-41, -31, -12, -21, -9, -28, -1, -32,
-38, -12, -32, -26, -20, 7, 21, -34, 
0, 0, 0, 0, 0, 0, 0, 0,
},
{
-265, -136, -76, -54, 130, -120, -79, -75,
-64, 1, 70, 39, 62, 88, -39, -32,
-1, 23, 3, 52, 97, 171, 67, 10,
18, 9, -4, 24, 3, 6, -5, 36,
9, -16, 27, 17, 27, 14, 3, -9,
-14, 0, 19, 19, 5, 20, 16, -15,
-20, -18, 22, 19, 21, 26, 10, 3, 
-49, -6, -40, 3, -12, -13, -6, -24,
},
{
-44, -76, -72, -96, -110, -50, 31, -38,
11, 10, 6, 51, -36, 79, 14, 37,
-17, -4, 30, 35, 37, 63, 94, 21,
-11, 2, 21, 21, 23, -11, 19, 18,
-4, 26, 5, 45, 24, 21, 6, -10,
36, 44, 29, 14, 26, 33, 25, 14,
-11, 52, 4, 21, 28, 63, 58, 29, 
46, 27, 29, 16, 20, 10, 27, 13,
},
{
-23, 10, -35, 17, 53, 68, -30, -9,
-37, -59, -25, -8, -14, 132, -25, -35,
-15, -49, -30, 0, 15, 9, 45, 9,
-57, -16, -34, 13, -38, 10, -28, -25,
-45, -47, -17, -56, -17, -45, -85, -55,
-17, -40, -17, -21, -30, -19, 23, -4,
-35, -70, -36, -43, -48, -16, -24, -89, 
-22, -18, -8, 0, 4, 0, -46, -19,
},
{
-88, 35, 73, 25, 33, 64, -4, 16,
-55, -54, -59, -100, -106, 14, -2, 75,
-23, -42, -42, -26, -7, 21, -45, -5,
-26, -41, -24, -52, -20, -33, 8, -25,
-11, -50, -37, -22, -25, -14, -7, -27,
-53, -10, -2, -13, -10, -9, -27, -28,
-18, -7, -1, 3, 14, 26, 33, -20, 
-2, 1, 6, 11, -16, 15, -44, 2,
},
{
-124, 37, 39, 59, -65, -46, 76, -53,
-55, 23, 43, -6, -37, 26, -84, 37,
52, 35, -41, 41, -49, 53, 38, -15,
3, 47, -58, -31, -115, -4, 16, -81,
-20, 44, 69, -21, -25, -37, -50, -64,
-28, 45, 4, -67, -37, -15, -9, -6,
-53, -44, -36, -70, -63, -17, 17, -3, 
-80, 21, 19, -88, -1, -28, 21, -3,
},
};

constexpr int EG_PST_VALUES[6][64] =
{
{
0, 0, 0, 0, 0, 0, 0, 0,
158, 124, 132, 108, 74, 123, 157, 153,
92, 75, 53, 39, 29, 0, 46, 70,
10, 11, -5, -20, -24, -8, -2, -9,
-16, -13, -26, -28, -37, -22, -17, -20,
-13, 0, -37, -23, -27, -20, -25, -27,
-5, -5, -4, -6, -9, -16, -26, -24,
0, 0, 0, 0, 0, 0, 0, 0, 
},
{
-49, -29, -53, 7, -22, -6, -17, -51,
29, -18, -56, -55, -13, -24, 2, -36,
-39, -21, 5, -18, -8, -23, -11, -16,
-5, 21, 23, 34, 30, 40, 13, -44,
-2, 35, 14, 24, 16, 7, 11, -12,
-42, 6, -5, 18, 26, 2, 0, 16,
-16, -54, -10, 10, -2, 25, -34, -10,
-53, -6, 13, 1, 1, 2, -8, 20, 
},
{
2, -42, -22, -4, -26, 5, 2, 15,
-49, -15, -17, -40, 5, -25, -11, -4,
-11, -9, -21, -13, 4, 6, -39, -6,
2, -1, -17, 14, -1, -23, -27, -26,
-35, -24, -5, 9, -2, -4, -19, -40,
-14, -7, -15, 11, 3, 3, 6, -5,
15, -33, -16, 3, -15, -1, -18, -10,
-36, -31, -32, -1, -14, -18, -8, -34,
}, 
{
18, 3, -15, -10, -10, -15, -4, -2,
-13, 17, -3, -1, -11, -33, 9, 1,
6, 5, -1, -11, -29, -38, -30, -22,
3, -12, 3, -20, -12, -9, -26, -23,
-1, 9, -23, 6, -17, -13, -14, -24,
-1, 6, -7, -11, 0, -8, -50, -6,
20, 8, 19, 4, 1, -20, 3, -18,
-3, -6, -7, -14, -22, -21, -21, -30,
},
{
65, 33, 4, 27, -59, 23, 56, 48, 
54, 41, 39, 103, 76, 32, 16, -78,
-21, -17, 53, 19, 99, 5, 57, -48,
22, 26, -23, 55, 3, 12, 36, -10,
3, 60, 69, 8, 28, 1, 66, 52,
3, -2, 29, 0, 28, 34, 72, 59,
47, 39, -13, 37, -16, -34, -54, 52,
-15, -36, 20, -6, 61, -75, 45, -4,
},
{
-116, 9, -19, -17, -26, 13, 15, -89,
1, 39, -19, -21, 31, 14, 31, 4, 
-60, -5, 22, -9, 10, 7, 19, 11,
-48, 1, 10, 23, 9, 15, 10, 16,
-35, -31, -3, 24, 14, 18, 16, 1,
-15, -8, 7, 24, 25, 20, -2, -14,
-20, 9, 27, 33, 29, 17, -5, -17,
-24, -33, -19, 7, -20, -19, -38, -49,
},
};

constexpr int KING_EDGE[64] = 
{
  -100,  -95,  -90,  -90,  -90,  -90,  -95,  -100,  
  -95,  -50,  -50,  -50,  -50,  -50,  -50,  -95,  
  -90,  -50,  -10,  -10,  -10,  -10,  -50,  -90,  
  -90,  -50,  -10,    0,    0,  -10,  -50,  -90,  
  -90,  -50,  -10,    0,    0,  -10,  -50,  -90,  
  -90,  -50,  -10,  -10,  -10,  -10,  -50,  -90,  
  -95,  -50,  -50,  -50,  -50,  -50,  -50,  -95,  
  -100,  -95,  -90,  -90,  -90,  -90,  -95,  -100,
};

constexpr int flip_board[2][64] = {
{
		0, 1, 2, 3, 4, 5, 6, 7,
		8, 9, 10, 11, 12, 13, 14, 15,
		16, 17, 18, 19, 20, 21, 22, 23,
		24, 25, 26, 27, 28, 29, 30, 31,
		32, 33, 34, 35, 36, 37, 38, 39,
		40, 41, 42, 43, 44, 45, 46, 47,
		48, 49, 50, 51, 52, 53, 54, 55,
		56, 57, 58, 59, 60, 61, 62, 63
},
{
  56, 57, 58, 59, 60, 61, 62, 63,
  48, 49, 50, 51, 52, 53, 54, 55,
  40, 41, 42, 43, 44, 45, 46, 47,
  32, 33, 34, 35, 36, 37, 38, 39,
  24, 25, 26, 27, 28, 29, 30, 31,
  16, 17, 18, 19, 20, 21, 22, 23,
  8, 9, 10, 11, 12, 13, 14, 15,
  0, 1, 2, 3, 4, 5, 6, 7
}
};


#endif



